.am-panel.am-panel-default
  .am-panel-hd
  .am-panel-bd
    #acModel.am-form
      .am-form-group
        label 用户名:
        input(type="text" data-bind="value: uid")
        p.am-alert-danger(data-bind="validationMessage: uid")
        p.am-form-help 不超过30个字符
      .am-form-group
        label 密码:
        input(type="text" data-bind="value: password")
        p.am-alert-danger(data-bind="validationMessage: password")
        p.am-form-help 不超过30个字符
      .am-form-group
        label 用户姓名:
        input(type="text" data-bind="value: username")
        p.am-alert-danger(data-bind="validationMessage: username")
        p.am-form-help 不超过30个字符
      .am-form-group
        label 电子邮件地址:
        input(type="text" data-bind="value: email")
        p.am-alert-danger(data-bind="validationMessage: email")
        p.am-form-help 不超过30个字符
      .am-form-group
        label QQ号:
        input(type="text" data-bind="value: qq")
        p.am-alert-danger(data-bind="validationMessage: qq")
        p.am-form-help 不超过30个字符
      .am-navbar.am-cf.am-navbar-default(data-am-widget="navbar")
        ul.am-navbar-nav.am-cf.am-avg-sm-4
          li
            a(data-bind="click: acSave")
              span.am-icon-save
              span.am-navbar-label 保 存
script.
  function acvm() {
    var self = this;
    self.username = ko.observable().extend({ required: true, minLength: 3, maxLength: 64 });
    self.password = ko.observable().extend({ required: true, minLength: 3, maxLength: 64 });
    self.uid = ko.observable().extend({ required: true, minLength: 3, maxLength: 64 });
    self.email = ko.observable().extend({ required: true, minLength: 3, maxLength: 64 });
    self.qq = ko.observable().extend({ required: true, minLength: 3, maxLength: 64 });

    self.getjson = function () {
      var dv = new Object();
      dv.username = self.username();
      dv.password = self.password();
      dv.uid = self.uid();
      dv.email = self.email();
      dv.qq = self.qq();
      return JSON.stringify(dv);
    };

    self.acSave = function () {
      if (self.isValid()) {
        $.ajax({
          type: "POST",
          url: "/usercreate",
          data: self.getjson(),
          beforeSend: function (xhr) {
            xhr.setRequestHeader("Content-Type", "application/json")
          },
          success: function (result) {
            if (result === "") {
              $("#render").load("web/account_usersManager_page.html");
            } else {
              $("#msg").html(result);
              $('#my-prompt').modal('open');
            }
          },
          error: function (xhr, status, error) {
            $("#msg").html(xhr.responseText);
            $('#my-prompt').modal('open');
          }
        });
      } else {
        $("#msg").html("数据验证失败！");
        $('#my-prompt').modal('open');
      }
    };

    self.cancel = function () {
      self.username("");
      self.password("");
      self.uid("");
      self.email("");
      self.qq("");
    };

  }
  var dvvm = new acvm();
  ko.applyBindings(ko.validatedObservable(dvvm), document.getElementById("acModel"));
  dvvm.cancel();

  mainmodel.showback(true);



