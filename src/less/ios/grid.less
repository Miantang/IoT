/* === Grid === */
.row {
    overflow: hidden;
    margin-left: -4%;
    > [class*="col-"], > [class*="tablet-"] {
        box-sizing: border-box;
        float: left;
    }
    &.no-gutter {
        margin-left: 0;
    }
}
@cols: 5, 10, 15, 20, 25, 100/3, 40, 50, 60, 100*(2/3), 75, 80, 85, 90, 95, 100;
.row {
    .col-auto {
        width: 100%;
    }
    .-(@i: length(@cols)) when (@i > 0) {
        @divider: e(extract(@cols, @i));
        @className: `Math.floor(@{divider})`;
        @n: `100/parseFloat(@{divider})`;
        @n-1: @n - 1;
        @gutter: `4.0`;
        @d: `(100-@{gutter}*@{n})/@{n}`;
        .col-@{className} {
            width: ~"@{d}%";
            margin-left: ~"@{gutter}%";
        }
        &.no-gutter {
            @d: `100/@{n}`;
            .col-@{className} {
                width: ~"@{d}%";
                margin: 0;
            }
        }
        .-((@i - 1));
    } .-;
    .--(@j: 1) when (@j < length(@cols)) {
        @divider: e(extract(@cols, @j));
        @className: `Math.floor(@{divider})`;
        .col-auto:nth-last-child(@{j}), .col-auto:nth-last-child(@{j}) ~ .col-auto {
            @j-1: @j - 1;  
            width: 100% / @j;
            width: ~"-webkit-calc((100% - 15px*@{j-1}) / @{j})";   
            width: ~"calc((100% - 15px*@{j-1}) / @{j})";   
        }
        &.no-gutter {
            .col-auto:nth-last-child(@{j}), .col-auto:nth-last-child(@{j}) ~ .col-auto {
                width: 100% / @j;
            }
        }
        .--((@j + 1));
    } .--;
    
}

@media all and (min-width:768px) {
    .row {
        margin-left: -2%;
    }
    .row {
        .-(@i: length(@cols)) when (@i > 0) {
            @divider: e(extract(@cols, @i));
            @className: `Math.floor(@{divider})`;
            @n: `100/parseFloat(@{divider})`;
            @n-1: @n - 1;
            @gutter: `2.0`;
            @d: `(100-@{gutter}*@{n})/@{n}`;
            .col-@{className} {
                width: ~"@{d}%";
                margin-left: ~"@{gutter}%";
            }
            &.no-gutter {
                @d: `100/@{n}`;
                .col-@{className} {
                    width: ~"@{d}%";
                    margin: 0;
                }
            }
            .-((@i - 1));
        } .-;
    }
    .row {
        .-(@i: length(@cols)) when (@i > 0) {
            @divider: e(extract(@cols, @i));
            @className: `Math.floor(@{divider})`;
            @n: `100/parseFloat(@{divider})`;
            @n-1: @n - 1;
            @gutter: `2.0`;
            @d: `(100-@{gutter}*@{n})/@{n}`;
            .tablet-@{className} {
                width: ~"@{d}%";
                margin-left: ~"@{gutter}%";
            }
            &.no-gutter {
                @d: `100/@{n}`;
                .tablet-@{className} {
                    width: ~"@{d}%";
                    margin: 0;
                }
            }
            .-((@i - 1));
        } .-;
        .--(@j: 1) when (@j < length(@cols)) {
            .tablet-auto:nth-last-child(@{j}), .tablet-auto:nth-last-child(@{j}) ~ .col-auto {
                @j-1: @j - 1;  
                width: 100% / @j;
                width: ~"-webkit-calc((100% - 15px*@{j-1}) / @{j})";   
                width: ~"calc((100% - 15px*@{j-1}) / @{j})";   
            }
            &.no-gutter {
                .tablet-auto:nth-last-child(@{j}), .tablet-auto:nth-last-child(@{j}) ~ .tablet-auto {
                    width: 100% / @j;
                }
            }
            .--((@j + 1));
        } .--;
    }

}
